name: dev-build-snapshot-publish
on:
  push:
    branches:
      - develop/**
      - ver_0.0.5_dev
      - master
jobs:
  first_job:
    name: publish
    runs-on: ubuntu-latest
    steps:
      - name: Start
        uses: actions/checkout@master
      - name: Set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v3
        with:
          gpg-private-key: ${{ secrets.SIGNING_KEY }}
          passphrase: ${{ secrets.SIGNING_PASSWORD }}
      - name: GPG user IDs
        run: |
          echo "fingerprint: ${{ steps.import_gpg.outputs.fingerprint }}"
          echo "keyid:       ${{ steps.import_gpg.outputs.keyid }}"
          echo "name:        ${{ steps.import_gpg.outputs.name }}"
          echo "email:       ${{ steps.import_gpg.outputs.email }}"
          sudo LANG=C gpg --export-secret-keys -o /home/runner/.gnupg/secring.gpg
          ls -la /home/runner/.gnupg/
          ls -la /usr/share/gnupg/
          ls -la /home/runner/.gnupg/
          ls -la ~/.gnupg/
      - name: Make Gradle Properties
        run: |
          mkdir ~/.gradle/
          echo signing.keyId=${{ secrets.SIGNING_KEYID }} > ~/.gradle/gradle.properties
          echo signing.password=${{ secrets.SIGNING_PASSWORD }} >> ~/.gradle/gradle.properties
          echo signing.secretKeyRingFile=/home/runner/.gnupg/secring.gpg >> ~/.gradle/gradle.properties
      - run: chmod +x gradlew
      - name: Build
        run: ./gradlew clean build
      - name: Publish
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          OSSRH_GPG_SECRET_KEY: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
        run: |
          env
          ./gradlew publish -Psnapshot=true
# sudo ./gradlew publish -Psnapshot=true -Psigning.secretKeyRingFile=/root/.gnupg/pubring.kbx -Psigning.keyId=${{ steps.import_gpg.outputs.keyid }} -Psigning.password=${SIGNING_PASSWORD}